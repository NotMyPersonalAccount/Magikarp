generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DB_URI")
}

//NextAuth.js
model Account {
  id                 String    @id @default(cuid())
  compoundId         String    @unique @map("compound_id")
  userId             String    @map("user_id")
  providerType       String    @map("provider_type")
  providerId         String    @map("provider_id")
  providerAccountId  String    @map("provider_account_id")
  refreshToken       String?   @map("refresh_token")
  accessToken        String?   @map("access_token")
  accessTokenExpires DateTime? @map("access_token_expires")
  createdAt          DateTime  @default(now()) @map("created_at")
  updatedAt          DateTime  @default(now()) @map("updated_at")

  @@map(name: "accounts")
}

model Session {
  id           String   @id @default(cuid())
  userId       String   @map("user_id")
  expires      DateTime
  sessionToken String   @unique @map("session_token")
  accessToken  String   @unique @map("access_token")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @default(now()) @map("updated_at")

  @@map(name: "sessions")
}

//Magikarp
model User {
  //NextAuth.js
  id            String    @id @default(cuid())
  name          String
  email         String    @unique
  emailVerified DateTime? @map("email_verified") //NextAuth.js Trash, Google provider gurantees verified emails, may not be safe to remove however
  image         String
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @default(now()) @map("updated_at")

  //Magikarp
  classes ClassEnrollment[]

  @@map(name: "users")
}

model Class {
  id          String            @id @default(cuid())
  name        String
  description String?
  members     ClassEnrollment[]

  @@map(name: "classes")
}

model ClassEnrollment {
  role String

  user    User   @relation(fields: [userId], references: [id])
  userId  String @map("user_id")
  class   Class  @relation(fields: [classId], references: [id])
  classId String @map("class_id")

  @@id([userId, classId])
  @@map(name: "class_enrollment")
}
